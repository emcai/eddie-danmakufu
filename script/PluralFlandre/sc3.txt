#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Flandre Scarlet SC 3"]

#include "shot/AllStarShot_Const.txt"
#include "script/helper.txt"
#include "script/cutin.txt"
#include "script/boss_lib/GizmoSpriteLibrary.txt"

let objBoss;
let objScene = GetEnemyBossSceneObjectID();
let frame = -80;
let idA; let idB; let idC; let idD;
let objBullet; let objBulletWave;

@Event
{
	alternative(GetEventType())
	case (EV_REQUEST_LIFE) {
		SetScriptResult(600);
	}
	case (EV_REQUEST_TIMER) {
		SetScriptResult(50);
	}
	case (EV_PLAYER_REBIRTH) {
		deleteAll;
	}
}

@Initialize
{
	InstallFont("font/lucon.ttf");
	objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
	ObjEnemy_Regist(objBoss);
	ObjEnemy_SetDamageRate(objBoss, 20, 4);
	
	let cutin = "img/Flandre Scarlet/cutin.png";
	ObjCutin_LaunchS3(NAZRIN, cutin, "Lunatic");
	let card1 = ObjText_Create();
	ObjText_SetText(card1, "Terror \"Recurring Nightmare\"");
	ObjText_SetFontSize(card1, 16);
    ObjText_SetFontType(card1, "Ludica Console");
    ObjText_SetFontBold(card1, true);
	ObjRender_SetX(card1, 80);
	ObjRender_SetY(card1, 15);
	
	ObjEnemyBossScene_StartSpell(objScene);

	renderSanaeMoF(objBoss); 
	ObjSprite2D_SetSourceRect(objBoss, 10, 10, 40, 40); 
	ObjSprite2D_SetDestCenter(objBoss); 

	let cx = GetStgFrameWidth() / 2;
	ObjMove_SetDestAtFrame(objBoss, cx, 85, 20);
	
	objBullet = createSoundEffect("script/snd/Bullet.wav");
	objBulletWave = createSoundEffect("script/snd/BulletWave.wav");
}

@MainLoop
{
	let ex = ObjMove_GetX(objBoss);
	let ey = ObjMove_GetY(objBoss);
	
	ObjEnemy_SetIntersectionCircleToShot(objBoss, ex, ey, 32);
	ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ex, ey, 24);
	
	frame++;
	
	if(ObjEnemy_GetInfo(objBoss, INFO_LIFE) <= 0)
	{
		TFinalize;
	}
	
	if(frame % 240 == 0 && frame > -1){
		fire;
	}
	
	if (frame % 480 == 0 && frame > -1){
		ObjMove_SetDestAtFrame(objBoss, GetStgFrameWidth() / 2 - 60, 140, 30);
	}
	else if (frame % 480 == 120 && frame > -1){
		ObjMove_SetDestAtFrame(objBoss, GetStgFrameWidth() / 2, 200, 30);
	}
	else if (frame % 480 == 240 && frame > -1){
		ObjMove_SetDestAtFrame(objBoss, GetStgFrameWidth() / 2 + 60, 140, 30);
	}
	else if (frame % 480 == 360 && frame > -1){
		ObjMove_SetDestAtFrame(objBoss, GetStgFrameWidth() / 2, 80, 30);
	}
	
	yield;
}

task TFinalize {
	if(ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT)
      +ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT) == 0){
		AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));
	}
	
	Obj_Delete(objBoss);
	DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
	SetAutoDeleteObject(true);
	CloseScript(GetOwnScriptID());
	return;
}

task fire {
	let ex = ObjMove_GetX(objBoss);
	let ey = ObjMove_GetY(objBoss);
	let angle = 10;
	
	fireShot(45);
	wait(10);
	fireShot(135);
	wait(10);
	fireShot(225);
	wait(10);
	fireShot(315);
	wait(60);
	fireShot(0);
	wait(10);
	fireShot(90);
	wait(10);
	fireShot(180);
	wait(10);
	fireShot(270);
}

//fires three bouncy shots approx to that angle
task fireShot(angle) {
	bounceShot(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 3, angle, DOT_RED, 5);
	bounceShot(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 3, angle + 15, DOT_RED, 5);
	bounceShot(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 3, angle - 15, DOT_RED, 5);
	bounceShot(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 2, angle, DOT_RED, 5);
	bounceShot(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 2, angle + 15, DOT_RED, 5);
	bounceShot(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 2, angle - 15, DOT_RED, 5);
	ObjSound_Play(objBullet);
}

//task for bouncy shots
task bounceShot(x, y, speed, angle, graphic, delay) {
	let max_bounce = 2;
	let obj = CreateShotA1(x, y, speed, angle, graphic, delay);
	
	while(!Obj_IsDeleted(obj)) {
		//bounces off left or right wall
		if(ObjRender_GetX(obj) < 0 || ObjRender_GetX(obj) > GetStgFrameWidth && max_bounce > 0) {
			ObjMove_SetAngle(obj, 180 - ObjMove_GetAngle(obj));
			if (max_bounce == 2) {
				ObjShot_SetGraphic(obj, PELLET_RED);
			}
			else {
				ObjShot_SetGraphic(obj, GLOW_RED);
			}
			max_bounce -= 1;
		}
		
		//bounces off top or bottom wall
		if(ObjRender_GetY(obj) < 0 || ObjRender_GetY(obj) > GetStgFrameHeight && max_bounce > 0) {
			ObjMove_SetAngle(obj, -ObjMove_GetAngle(obj));
			if (max_bounce == 2) {
				ObjShot_SetGraphic(obj, PELLET_RED);
			}
			else {
				ObjShot_SetGraphic(obj, GLOW_RED);
			}
			max_bounce -= 1;
		}
		
		if (max_bounce <= 0) {
			break;
		}
		yield;
	}
}